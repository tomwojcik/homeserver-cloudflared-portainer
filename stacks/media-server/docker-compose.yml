version: "3.8"

services:
  # VPN Container
  gluetun:
    image: qmcgaw/gluetun:latest
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - "8080:8080"   # qbittorrent
      - "8081:8081"   # metube
    volumes:
      - /volume1/docker/gluetun/config:/gluetun
    environment:
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER:-surfshark}
      - VPN_TYPE=${VPN_TYPE:-wireguard}
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES}
      - TZ=${TZ:-UTC}
      - HTTPPROXY=on
      - HTTPPROXY_LOG=on
    networks:
      - homeserver
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "my.zone=homeserver"
      - "traefik.enable=true"
      - "traefik.http.routers.qbittorrent.rule=Host(`qbittorrent.${SERVER_DOMAIN}`)"
      - "traefik.http.routers.qbittorrent.entrypoints=websecure"
      - "traefik.http.routers.qbittorrent.tls.certresolver=myresolver"
      - "traefik.http.services.qbittorrent.loadbalancer.server.port=8080"
      - "traefik.docker.network=homeserver"

  # Torrent Client (through external VPN)
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
      - WEBUI_PORT=8080
    volumes:
      - /volume1/docker/media-server/qbittorrent:/config
      - /volume1/docker/media-server/downloads:/downloads
      - /volume1/docker/media-server/media:/data
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    labels:
      - "my.zone=homeserver"

  # Indexer Manager
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
    volumes:
      - /volume1/docker/media-server/prowlarr:/config
    networks:
      - homeserver
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    labels:
      - "my.zone=homeserver"
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.${SERVER_DOMAIN}`)"
      - "traefik.http.routers.prowlarr.entrypoints=websecure"
      - "traefik.http.routers.prowlarr.tls.certresolver=myresolver"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"

  # TV Show Manager
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
    volumes:
      - /volume1/docker/media-server/sonarr:/config
      - /volume1/docker/media-server/downloads:/downloads
      - /volume1/docker/media-server/media:/data
    networks:
      - homeserver
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    labels:
      - "my.zone=homeserver"
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.${SERVER_DOMAIN}`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls.certresolver=myresolver"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"

  # Movie Manager
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
    volumes:
      - /volume1/docker/media-server/radarr:/config
      - /volume1/docker/media-server/downloads:/downloads
      - /volume1/docker/media-server/media:/data
    networks:
      - homeserver
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    labels:
      - "my.zone=homeserver"
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.${SERVER_DOMAIN}`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls.certresolver=myresolver"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"

  # Subtitle Manager
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
    volumes:
      - /volume1/docker/media-server/bazarr:/config
      - /volume1/docker/media-server/media:/data
    networks:
      - homeserver
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    labels:
      - "my.zone=homeserver"
      - "traefik.enable=true"
      - "traefik.http.routers.bazarr.rule=Host(`bazarr.${SERVER_DOMAIN}`)"
      - "traefik.http.routers.bazarr.entrypoints=websecure"
      - "traefik.http.routers.bazarr.tls.certresolver=myresolver"
      - "traefik.http.services.bazarr.loadbalancer.server.port=6767"

  # Jellyfin Media Server
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
    volumes:
      - /volume1/docker/media-server/jellyfin:/config
      - /volume1/docker/media-server/media:/data
      - /volume1/docker/media-server/jellyfin-cache:/cache
    networks:
      - homeserver
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    labels:
      - "my.zone=homeserver"
      - "traefik.enable=true"
      - "traefik.http.routers.jellyfin.rule=Host(`jellyfin.${SERVER_DOMAIN}`)"
      - "traefik.http.routers.jellyfin.entrypoints=websecure"
      - "traefik.http.routers.jellyfin.tls.certresolver=myresolver"
      - "traefik.http.services.jellyfin.loadbalancer.server.port=8096"
    # GPU support (uncomment if you have Intel/AMD GPU)
    # devices:
    #   - /dev/dri:/dev/dri

  # Plex Media Server
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
      - VERSION=docker
      - PLEX_CLAIM=${PLEX_CLAIM}
    volumes:
      - /volume1/docker/media-server/plex:/config
      - /volume1/docker/media-server/media:/data
    networks:
      - homeserver
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    labels:
      - "my.zone=homeserver"
      - "traefik.enable=true"
      - "traefik.http.routers.plex.rule=Host(`plex.${SERVER_DOMAIN}`)"
      - "traefik.http.routers.plex.entrypoints=websecure"
      - "traefik.http.routers.plex.tls.certresolver=myresolver"
      - "traefik.http.services.plex.loadbalancer.server.port=32400"
    # GPU support (uncomment if you have Intel/AMD GPU)
    # devices:
    #   - /dev/dri:/dev/dri

  # Media Request Manager
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
      - LOG_LEVEL=info
    volumes:
      - /volume1/docker/media-server/jellyseerr:/app/config
    networks:
      - homeserver
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    labels:
      - "my.zone=homeserver"
      - "traefik.enable=true"
      - "traefik.http.routers.jellyseerr.rule=Host(`jellyseerr.${SERVER_DOMAIN}`)"
      - "traefik.http.routers.jellyseerr.entrypoints=websecure"
      - "traefik.http.routers.jellyseerr.tls.certresolver=myresolver"
      - "traefik.http.services.jellyseerr.loadbalancer.server.port=5055"

networks:
  homeserver:
    name: homeserver
    external: true

