{
    "version": "2",
    "templates": [
        {
            "type": 3,
            "name": "chatgpt_next_web",
            "title": "ChatGPT Web Interface",
            "description": "Lightweight ChatGPT web interface supporting OpenAI, Anthropic, Google AI. Simple deployment with access code protection.",
            "env": [
                {
                    "label": "OpenAI API Key",
                    "name": "OPENAI_API_KEY",
                    "description": "Your OpenAI API key"
                },
                {
                    "label": "Anthropic API Key",
                    "name": "ANTHROPIC_API_KEY",
                    "description": "Your Anthropic Claude API key (optional)"
                },
                {
                    "label": "Google API Key",
                    "name": "GOOGLE_API_KEY",
                    "description": "Your Google AI API key (optional)"
                },
                {
                    "label": "Access Code",
                    "name": "ACCESS_CODE",
                    "description": "Password to access the interface (leave empty for no protection)"
                },
                {
                    "label": "Hide User API Key Input",
                    "name": "HIDE_USER_API_KEY",
                    "default": "true",
                    "description": "Hide API key input from users (true/false)"
                },
                {
                    "label": "Default Model",
                    "name": "DEFAULT_MODEL",
                    "default": "gpt-3.5-turbo",
                    "description": "Default AI model to use"
                },
                {
                    "label": "Custom Models",
                    "name": "CUSTOM_MODELS",
                    "description": "Comma-separated list of custom model names (optional)"
                }
            ],
            "logo": "https://raw.githubusercontent.com/tomwojcik/homeserver-traefik-portainer/master/stacks/chatgpt-next-web/logo.png",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/chatgpt-next-web/docker-compose.yml",
                "url": "https://github.com/tomwojcik/homeserver-traefik-portainer"
            },
            "note": "Lightweight alternative to Open WebUI. Conversations stored in browser localStorage. Set ACCESS_CODE for protection."
        },
        {
            "type": 3,
            "name": "cyberchef",
            "title": "CyberChef",
            "description": "The Cyber Swiss Army Knife - a web app for encryption, encoding, compression and data analysis.",
            "env": [],
            "logo": "https://raw.githubusercontent.com/tomwojcik/homeserver-traefik-portainer/3b98d68b5cd095301faa643bfb1186860b099b51/stacks/cyberchef/logo.png",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/cyberchef/docker-compose.yml",
                "url": "https://github.com/tomwojcik/homeserver-traefik-portainer"
            }
        },
        {
            "type": 3,
            "name": "dozzle",
            "title": "Dozzle",
            "description": "All docker logs in one place.",
            "env": [],
            "logo": "https://raw.githubusercontent.com/tomwojcik/homeserver-traefik-portainer/768751405404ca3b36cf73cdd1ca8c699b26a5f0/stacks/dozzle/logo.png",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/dozzle/docker-compose.yml",
                "url": "https://github.com/tomwojcik/homeserver-traefik-portainer"
            }
        },
        {
            "type": 3,
            "name": "duplicati",
            "title": "Duplicati Backup",
            "description": "Encrypted backup solution with support for cloud storage (Google Drive, AWS S3, OneDrive, etc.)",
            "env": [
                {
                    "label": "PUID (User ID)",
                    "name": "PUID",
                    "default": "1000"
                },
                {
                    "label": "PGID (Group ID)",
                    "name": "PGID",
                    "default": "1000"
                },
                {
                    "label": "Timezone",
                    "name": "TZ",
                    "default": "UTC"
                }
            ],
            "logo": "https://raw.githubusercontent.com/tomwojcik/homeserver-traefik-portainer/master/stacks/duplicati/logo.png",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/duplicati/docker-compose.yml",
                "url": "https://github.com/tomwojcik/homeserver-traefik-portainer"
            },
            "note": "After deployment, configure cloud storage backends and backup schedules via web interface."
        },
        {
            "type": 3,
            "name": "freshrss",
            "title": "FreshRSS",
            "description": "Self-hosted RSS feed reader with PostgreSQL database.",
            "env": [
                {
                    "label": "POSTGRES_PASSWORD",
                    "name": "POSTGRES_PASSWORD"
                }
            ],
            "logo": "https://raw.githubusercontent.com/tomwojcik/homeserver-traefik-portainer/master/stacks/freshrss/logo.png",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/freshrss/docker-compose.yml",
                "url": "https://github.com/tomwojcik/homeserver-traefik-portainer"
            }
        },
        {
            "type": 3,
            "name": "gitea",
            "title": "Gitea Git Service",
            "description": "Self-hosted Git service with web interface. Lightweight, modern alternative to GitHub with CI/CD, issues, pull requests, and more.",
            "env": [
                {
                    "label": "PUID (User ID)",
                    "name": "PUID",
                    "default": "1000"
                },
                {
                    "label": "PGID (Group ID)",
                    "name": "PGID",
                    "default": "1000"
                },
                {
                    "label": "Gitea Domain",
                    "name": "GITEA_DOMAIN",
                    "default": "git.yourdomain.com",
                    "description": "Domain where Gitea will be accessible"
                },
                {
                    "label": "Database Name",
                    "name": "GITEA_DB_NAME",
                    "default": "gitea"
                },
                {
                    "label": "Database User",
                    "name": "GITEA_DB_USER",
                    "default": "gitea"
                },
                {
                    "label": "Database Password",
                    "name": "GITEA_DB_PASS",
                    "default": "changeme123"
                }
            ],
            "logo": "https://raw.githubusercontent.com/tomwojcik/homeserver-traefik-portainer/master/stacks/gitea/logo.png",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/gitea/docker-compose.yml",
                "url": "https://github.com/tomwojcik/homeserver-traefik-portainer"
            },
            "note": "Includes PostgreSQL database. SSH available on port 2222. Modern replacement for Gogs with more features."
        },
        {
            "type": 3,
            "name": "gluetun_vpn",
            "title": "VPN Gateway",
            "description": "VPN client gateway that other containers can use for secure internet access. Supports multiple VPN providers.",
            "env": [
                {
                    "label": "Timezone",
                    "name": "TZ",
                    "default": "UTC"
                },
                {
                    "label": "VPN Service Provider",
                    "name": "VPN_SERVICE_PROVIDER",
                    "default": "surfshark",
                    "description": "VPN provider (surfshark, nordvpn, expressvpn, etc.)"
                },
                {
                    "label": "VPN Type",
                    "name": "VPN_TYPE",
                    "default": "wireguard",
                    "description": "VPN connection type (wireguard or openvpn)"
                },
                {
                    "label": "WireGuard Private Key",
                    "name": "WIREGUARD_PRIVATE_KEY",
                    "description": "Your VPN WireGuard private key"
                },
                {
                    "label": "WireGuard Public Key",
                    "name": "WIREGUARD_PUBLIC_KEY",
                    "description": "VPN server's WireGuard public key"
                },
                {
                    "label": "WireGuard Addresses",
                    "name": "WIREGUARD_ADDRESSES",
                    "description": "Your VPN WireGuard IP addresses (include /32 mask)"
                },
                {
                    "label": "WireGuard DNS",
                    "name": "WIREGUARD_DNS",
                    "default": "1.1.1.1",
                    "description": "DNS servers for WireGuard connection"
                },
                {
                    "label": "WireGuard SERVER_COUNTRIES",
                    "name": "SERVER_COUNTRIES",
                    "description": "Country name"
                },
                {
                    "label": "Firewall Outbound Subnets",
                    "name": "FIREWALL_OUTBOUND_SUBNETS",
                    "default": "172.18.0.0/16",
                    "description": "Allowed outbound subnets for Docker network communication"
                }
            ],
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/gluetun/docker-compose.yml",
                "url": "https://github.com/tomwojcik/homeserver-traefik-portainer"
            },
            "note": "Deploy this stack first, then reference the gluetun container in other stacks that need VPN connectivity."
        },
        {
            "type": 3,
            "name": "gogs",
            "title": "Gogs",
            "description": "Self-hosted git. Sync external git repos.",
            "env": [],
            "logo": "https://raw.githubusercontent.com/tomwojcik/homeserver-traefik-portainer/17225eb614a986de9cbf33512d4b1395376b684f/stacks/gogs/logo.png",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/gogs/docker-compose.yml",
                "url": "https://github.com/tomwojcik/homeserver-traefik-portainer"
            }
        },
        {
            "type": 3,
            "name": "heimdall",
            "title": "Heimdall",
            "description": "Landing page for the homeserver.",
            "env": [],
            "logo": "https://raw.githubusercontent.com/tomwojcik/homeserver-traefik-portainer/17225eb614a986de9cbf33512d4b1395376b684f/stacks/heimdall/logo.png",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/heimdall/docker-compose.yml",
                "url": "https://github.com/tomwojcik/homeserver-traefik-portainer"
            }
        },
        {
            "type": 3,
            "name": "home_assistant",
            "title": "Home Assistant",
            "description": "Open source home automation platform. Control lights, switches, sensors, and more from a unified interface.",
            "env": [
                {
                    "label": "Timezone",
                    "name": "TZ",
                    "default": "UTC"
                }
            ],
            "logo": "https://raw.githubusercontent.com/tomwojcik/homeserver-traefik-portainer/master/stacks/homeassistant/logo.png",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/homeassistant/docker-compose.yml",
                "url": "https://github.com/tomwojcik/homeserver-traefik-portainer"
            },
            "note": "Uses host networking for device discovery. Includes optional MQTT broker. Access via port 8123."
        },
        {
            "type": 3,
            "name": "media_server_stack",
            "title": "Complete Media Server",
            "description": "Full media server stack with VPN-protected downloading, media management (Sonarr/Radarr), and streaming (Jellyfin/Plex). Includes request management via Jellyseerr.",
            "env": [
                {
                    "label": "PUID (User ID)",
                    "name": "PUID",
                    "default": "1000"
                },
                {
                    "label": "PGID (Group ID)",
                    "name": "PGID",
                    "default": "1000"
                },
                {
                    "label": "Timezone",
                    "name": "TZ",
                    "default": "UTC"
                },
                {
                    "label": "VPN Service Provider",
                    "name": "VPN_SERVICE_PROVIDER",
                    "default": "surfshark",
                    "description": "VPN provider (surfshark, nordvpn, expressvpn, etc.)"
                },
                {
                    "label": "VPN Type",
                    "name": "VPN_TYPE",
                    "default": "wireguard",
                    "description": "VPN connection type (wireguard or openvpn)"
                },
                {
                    "label": "WireGuard Private Key",
                    "name": "WIREGUARD_PRIVATE_KEY",
                    "description": "Your VPN WireGuard private key"
                },
                {
                    "label": "WireGuard Addresses",
                    "name": "WIREGUARD_ADDRESSES",
                    "description": "Your VPN WireGuard IP addresses"
                },
                {
                    "label": "Plex Claim Token",
                    "name": "PLEX_CLAIM",
                    "description": "Get from https://www.plex.tv/claim (optional, expires in 4 minutes)"
                }
            ],
            "logo": "https://raw.githubusercontent.com/tomwojcik/homeserver-traefik-portainer/master/stacks/media-server/logo.png",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/media-server/docker-compose.yml",
                "url": "https://github.com/tomwojcik/homeserver-traefik-portainer"
            },
            "note": "After deployment, configure Cloudflare Tunnel routes for each service. VPN configuration required for safe torrenting."
        },
        {
            "type": 3,
            "name": "minio",
            "title": "MinIO",
            "description": "S3 alternative.",
            "env": [
                {
                    "label": "MINIO_ROOT_USER",
                    "name": "MINIO_ROOT_USER"
                },
                {
                    "label": "MINIO_ROOT_PASSWORD",
                    "name": "MINIO_ROOT_PASSWORD"
                }
            ],
            "logo": "https://raw.githubusercontent.com/tomwojcik/homeserver-traefik-portainer/17225eb614a986de9cbf33512d4b1395376b684f/stacks/minio/logo.png",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/minio/docker-compose.yml",
                "url": "https://github.com/tomwojcik/homeserver-traefik-portainer"
            }
        },
        {
            "type": 3,
            "name": "nextcloud",
            "title": "Nextcloud",
            "description": "Google drive/Dropbox alternative.",
            "env": [
                {
                    "label": "MYSQL_USER",
                    "name": "MYSQL_USER"
                },
                {
                    "label": "MYSQL_PASSWORD",
                    "name": "MYSQL_PASSWORD"
                },
                {
                    "label": "MYSQL_ROOT_PASSWORD",
                    "name": "MYSQL_ROOT_PASSWORD"
                },
                {
                    "label": "MYSQL_DATABASE",
                    "name": "MYSQL_DATABASE"
                }
            ],
            "logo": "https://raw.githubusercontent.com/tomwojcik/homeserver-traefik-portainer/17225eb614a986de9cbf33512d4b1395376b684f/stacks/nextcloud/logo.png",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/nextcloud/docker-compose.yml",
                "url": "https://github.com/tomwojcik/homeserver-traefik-portainer"
            }
        },
        {
            "type": 3,
            "name": "open_webui",
            "title": "Private AI Chat Interface",
            "description": "Self-hosted ChatGPT-like interface supporting OpenAI, Anthropic Claude, Google, and more. All conversations stored locally with user management.",
            "env": [
                {
                    "label": "OpenAI API Key",
                    "name": "OPENAI_API_KEY",
                    "description": "Your OpenAI API key (optional if using other providers)"
                },
                {
                    "label": "Anthropic API Key",
                    "name": "ANTHROPIC_API_KEY",
                    "description": "Your Anthropic Claude API key (optional)"
                },
                {
                    "label": "WebUI Secret Key",
                    "name": "WEBUI_SECRET_KEY",
                    "default": "generate-a-random-secret-key-here",
                    "description": "Secret key for session management (change this!)"
                },
                {
                    "label": "JWT Secret Key",
                    "name": "WEBUI_JWT_SECRET_KEY",
                    "default": "generate-a-different-jwt-secret-here",
                    "description": "JWT secret for authentication (change this!)"
                },
                {
                    "label": "Domain",
                    "name": "DOMAIN",
                    "default": "yourdomain.com",
                    "description": "Your domain for proper URL configuration"
                },
                {
                    "label": "Enable User Signup",
                    "name": "ENABLE_SIGNUP",
                    "default": "false",
                    "description": "Allow new user registrations (true/false)"
                },
                {
                    "label": "Default User Role",
                    "name": "DEFAULT_USER_ROLE",
                    "default": "user",
                    "description": "Default role for new users (user/admin)"
                }
            ],
            "logo": "https://raw.githubusercontent.com/tomwojcik/homeserver-traefik-portainer/master/stacks/open-webui/logo.png",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/open-webui/docker-compose.yml",
                "url": "https://github.com/tomwojcik/homeserver-traefik-portainer"
            },
            "note": "Configure API keys for your preferred AI providers. All chat history stored locally. Create admin user on first visit."
        },
        {
            "type": 3,
            "name": "pypi_server",
            "title": "PyPI Server",
            "description": "Private PyPI.",
            "env": [],
            "logo": "https://raw.githubusercontent.com/tomwojcik/homeserver-traefik-portainer/62ca45165603bdd6991c5684993ecb94ee631915/stacks/pypiserver/logo.png",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/pypiserver/docker-compose.yml",
                "url": "https://github.com/tomwojcik/homeserver-traefik-portainer"
            }
        },
        {
            "type": 3,
            "name": "syncthing",
            "title": "Syncthing P2P Sync",
            "description": "Continuous file synchronization between devices. Secure, private, and decentralized.",
            "env": [
                {
                    "label": "PUID (User ID)",
                    "name": "PUID",
                    "default": "1000"
                },
                {
                    "label": "PGID (Group ID)",
                    "name": "PGID",
                    "default": "1000"
                },
                {
                    "label": "Timezone",
                    "name": "TZ",
                    "default": "UTC"
                }
            ],
            "logo": "https://raw.githubusercontent.com/tomwojcik/homeserver-traefik-portainer/master/stacks/syncthing/logo.png",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/syncthing/docker-compose.yml",
                "url": "https://github.com/tomwojcik/homeserver-traefik-portainer"
            },
            "note": "Requires ports 22000 (TCP/UDP) and 21027 (UDP) for device communication. Configure via web interface."
        },
        {
            "type": 3,
            "name": "uptime_kuma",
            "title": "Uptime Kuma",
            "description": "A fancy self-hosted monitoring tool.",
            "env": [],
            "platform": "linux",
            "logo": "https://raw.githubusercontent.com/tomwojcik/homeserver-traefik-portainer/ffcc9ee7aed06102d724e45850b24ad8d9f80bde/stacks/uptime-kuma/logo.png",
            "repository": {
                "stackfile": "stacks/uptime-kuma/docker-compose.yml",
                "url": "https://github.com/tomwojcik/homeserver-traefik-portainer"
            }
        },
        {
            "type": 3,
            "name": "yt-dlp_material",
            "title": "YouTube Downloader",
            "description": "Web-based YouTube downloader with material design. Download videos, playlists, and audio with subscription management.",
            "env": [
                {
                    "label": "PUID (User ID)",
                    "name": "PUID",
                    "default": "1000"
                },
                {
                    "label": "PGID (Group ID)",
                    "name": "PGID",
                    "default": "1000"
                },
                {
                    "label": "Timezone",
                    "name": "TZ",
                    "default": "UTC"
                }
            ],
            "logo": "https://raw.githubusercontent.com/tomwojcik/homeserver-traefik-portainer/master/stacks/ytdlp/logo.png",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/ytdlp/docker-compose.yml",
                "url": "https://github.com/tomwojcik/homeserver-traefik-portainer"
            },
            "note": "Includes MongoDB for data persistence. Modern alternative to MeTube with better UI and features."
        },
        {
            "type": 3,
            "name": "cadvisor",
            "title": "cadvisor",
            "description": "Resources monitor.",
            "env": [],
            "logo": "https://raw.githubusercontent.com/tomwojcik/homeserver-traefik-portainer/3b98d68b5cd095301faa643bfb1186860b099b51/stacks/cadvisor/logo.png",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/cadvisor/docker-compose.yml",
                "url": "https://github.com/tomwojcik/homeserver-traefik-portainer"
            }
        },
        {
            "type": 3,
            "name": "docker_registry",
            "title": "Docker registry",
            "description": "Docker registry and UI docker hub.",
            "env": [],
            "logo": "https://raw.githubusercontent.com/tomwojcik/homeserver-traefik-portainer/8ee5120e19031d8f02b13e7975f6ccfa015377e8/stacks/registry/logo.png",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/registry/docker-compose.yml",
                "url": "https://github.com/tomwojcik/homeserver-traefik-portainer"
            }
        },
        {
            "type": 3,
            "name": "metube",
            "title": "metube",
            "description": "Web GUI for youtube-dl (using the yt-dlp fork) with playlist support. Allows you to download videos from YouTube and dozens of other sites.",
            "env": [],
            "logo": "https://github.com/tomwojcik/homeserver-traefik-portainer/blob/fed96b34414d8fc6fdac0f1b7a4ad336204d4773/stacks/metube/logo.png?raw=true",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/metube/docker-compose.yml",
                "url": "https://github.com/tomwojcik/homeserver-traefik-portainer"
            }
        },
        {
            "type": 3,
            "name": "n8n",
            "title": "n8n",
            "description": "Free and source-available fair-code licensed workflow automation tool. Easily automate tasks across different services.",
            "env": [
                {
                    "label": "N8N_BASIC_AUTH_USER",
                    "name": "N8N_BASIC_AUTH_USER"
                },
                {
                    "label": "N8N_BASIC_AUTH_PASSWORD",
                    "name": "N8N_BASIC_AUTH_PASSWORD"
                }
            ],
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/n8n/docker-compose.yml",
                "url": "https://github.com/tomwojcik/homeserver-traefik-portainer"
            }
        },
        {
            "type": 3,
            "name": "tubesync",
            "title": "tubesync",
            "description": "TubeSync is a PVR (personal video recorder) for YouTube. Or, like Sonarr but for YouTube (with a built-in download client). It is designed to synchronize channels and playlists from YouTube to local directories and update your media server once media is downloaded.",
            "env": [],
            "logo": "https://github.com/tomwojcik/homeserver-traefik-portainer/blob/fed96b34414d8fc6fdac0f1b7a4ad336204d4773/stacks/tubesync/logo.png?raw=true",
            "platform": "linux",
            "repository": {
                "stackfile": "stacks/tubesync/docker-compose.yml",
                "url": "https://github.com/tomwojcik/homeserver-traefik-portainer"
            }
        }
    ]
}