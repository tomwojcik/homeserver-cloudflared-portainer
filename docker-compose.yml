version: "3.8"

services:
  # Cloudflare Tunnel - Private (homeserver services with auth)
  cloudflared-private:
    image: cloudflare/cloudflared:2024.6.1
    container_name: cloudflared-private
    restart: always
    command: tunnel --no-autoupdate run --token ${CLOUDFLARE_TUNNEL_TOKEN_PRIVATE}
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN_PRIVATE}
    security_opt:
      - no-new-privileges:true
    read_only: true
    user: "65532:65532"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
        reservations:
          cpus: '0.1'
          memory: 32M
    networks:
      - homeserver

  # Cloudflare Tunnel - Public (side projects, no auth required)
  cloudflared-public:
    image: cloudflare/cloudflared:2024.6.1
    container_name: cloudflared-public
    restart: always
    command: tunnel --no-autoupdate run --token ${CLOUDFLARE_TUNNEL_TOKEN_PUBLIC}
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN_PUBLIC}
    security_opt:
      - no-new-privileges:true
    read_only: true
    user: "65532:65532"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
        reservations:
          cpus: '0.1'
          memory: 32M
    networks:
      - homeserver
      - public-projects

networks:
  homeserver:
    name: homeserver
    driver: bridge
  public-projects:
    name: public-projects
    driver: bridge

  # Portainer for container management
  portainer:
    image: portainer/portainer-ce:2.32.0
    command: -H unix:///var/run/docker.sock
    ports:
      - 9000:9000  # Keep for direct access if tunnel fails
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    env_file:
      - .env
    container_name: portainer
    restart: always
    security_opt:
      - no-new-privileges:true
    networks:
      - homeserver

networks:
  homeserver:
    name: homeserver
    driver: bridge

volumes:
  portainer_data:
